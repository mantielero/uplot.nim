/* Generated by the Nim Compiler v1.5.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI1073741828 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI33554460 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI33554465 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1073741827 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093708 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555103 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554455 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI905979596 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI905980075 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555119 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555110 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555117 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555109 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555111 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555154 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI33554439 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555153 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI33555101 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555102 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI520093707 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093706 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555072 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI553648208 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093705 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI520093705 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI520093705.node = NNI520093705;
var NNI553648208 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI553648208.node = NNI553648208;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
var NNI33555072 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555072.node = NNI33555072;
NTI33555177.base = NTI33555072;
NTI553648208.base = NTI33555177;
NTI520093705.base = NTI553648208;
var NNI520093706 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI520093706.node = NNI520093706;
NTI520093706.base = NTI553648208;
var NNI520093707 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI520093707.node = NNI520093707;
NTI520093707.base = NTI553648208;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
var NNI33555102 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555102.node = NNI33555102;
NTI33555153.base = NTI33555101;
NTI33555154.base = NTI33555101;
var NNI33555101 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555153, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554438, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554438, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555154, name: "up", sons: null}]};
NTI33555101.node = NNI33555101;
NTI33555101.base = NTI33555072;
NTI33555102.base = NTI33555101;
NTI33555113.base = NTI33555102;
var NNI33555111 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555111.node = NNI33555111;
var NNI33555109 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555109.node = NNI33555109;
NTI33555109.base = NTI33555102;
NTI33555111.base = NTI33555109;
var NNI33555117 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555117.node = NNI33555117;
NTI33555117.base = NTI33555102;
var NNI33555110 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555110.node = NNI33555110;
NTI33555110.base = NTI33555109;
var NNI33555119 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555119.node = NNI33555119;
NTI33555119.base = NTI33555102;
var NNI905980075 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI905979596, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554455, name: "b", sons: null}]};
NTI905980075.node = NNI905980075;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
var NNI33555103 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555103.node = NNI33555103;
NTI33555103.base = NTI33555101;
NTI33555114.base = NTI33555103;
var NNI520093708 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI520093708.node = NNI520093708;
NTI520093708.base = NTI553648208;
NTI1073741828.base = NTI33554460;
var NNI1073741827 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "show", len: 0, typ: NTI33554465, name: "show", sons: null}, 
{kind: 1, offset: "stroke", len: 0, typ: NTI33554439, name: "stroke", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554460, name: "width", sons: null}, 
{kind: 1, offset: "dash", len: 0, typ: NTI1073741828, name: "dash", sons: null}]};
NTI1073741827.node = NNI1073741827;
NTI1073741827.base = NTI553648208;
function toJSStr(s_33556794) {
                    var Tmp5;
            var Tmp7;

  var result_33556795 = null;

    var res_33556829 = newSeq_33556812((s_33556794).length);
    var i_33556830 = 0;
    var j_33556831 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_33556830 < (s_33556794).length)) break L2;
          var c_33556832 = s_33556794[i_33556830];
          if ((c_33556832 < 128)) {
          res_33556829[j_33556831] = String.fromCharCode(c_33556832);
          i_33556830 += 1;
          }
          else {
            var helper_33556844 = newSeq_33556812(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_33556845 = c_33556832.toString(16);
                  if ((((code_33556845) == null ? 0 : (code_33556845).length) == 1)) {
                  helper_33556844.push("%0");;
                  }
                  else {
                  helper_33556844.push("%");;
                  }
                  
                  helper_33556844.push(code_33556845);;
                  i_33556830 += 1;
                    if (((s_33556794).length <= i_33556830)) Tmp5 = true; else {                      Tmp5 = (s_33556794[i_33556830] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_33556832 = s_33556794[i_33556830];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_33556829[j_33556831] = decodeURIComponent(helper_33556844.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_33556829[j_33556831] = helper_33556844.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_33556831 += 1;
        }
    } while(false);
    if (res_33556829.length < j_33556831) { for (var i=res_33556829.length;i<j_33556831;++i) res_33556829.push(null); }
               else { res_33556829.length = j_33556831; };
    result_33556795 = res_33556829.join("");

  return result_33556795;

}
function makeNimstrLit(c_33556788) {
      var result = [];
  for (var i = 0; i < c_33556788.length; ++i) {
    result[i] = c_33556788.charCodeAt(i);
  }
  return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_33557130, src_33557131, ti_33557132) {
  var result_33557141 = null;

    switch (ti_33557132.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557121(ti_33557132))) {
      result_33557141 = src_33557131;
      }
      else {
        result_33557141 = [src_33557131[0], src_33557131[1]];
      }
      
      break;
    case 19:
            if (dest_33557130 === null || dest_33557130 === undefined) {
        dest_33557130 = {};
      }
      else {
        for (var key in dest_33557130) { delete dest_33557130[key]; }
      }
      for (var key in src_33557131) { dest_33557130[key] = src_33557131[key]; }
      result_33557141 = dest_33557130;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557132.base == null))) {
      result_33557141 = nimCopy(dest_33557130, src_33557131, ti_33557132.base);
      }
      else {
      if ((ti_33557132.kind == 17)) {
      result_33557141 = (dest_33557130 === null || dest_33557130 === undefined) ? {m_type: ti_33557132} : dest_33557130;
      }
      else {
        result_33557141 = (dest_33557130 === null || dest_33557130 === undefined) ? {} : dest_33557130;
      }
      }
      nimCopyAux(result_33557141, src_33557131, ti_33557132.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557131 === null) {
        result_33557141 = null;
      }
      else {
        if (dest_33557130 === null || dest_33557130 === undefined) {
          dest_33557130 = new Array(src_33557131.length);
        }
        else {
          dest_33557130.length = src_33557131.length;
        }
        result_33557141 = dest_33557130;
        for (var i = 0; i < src_33557131.length; ++i) {
          result_33557141[i] = nimCopy(result_33557141[i], src_33557131[i], ti_33557132.base);
        }
      }
    
      break;
    case 28:
            if (src_33557131 !== null) {
        result_33557141 = src_33557131.slice(0);
      }
    
      break;
    default: 
      result_33557141 = src_33557131;
      break;
    }

  return result_33557141;

}
function raiseException(e_33556655, ename_33556656) {
    e_33556655.name = ename_33556656;
    if ((excHandler == 0)) {
    unhandledException(e_33556655);
    }
    
    throw e_33556655;

  
}
function mnewString(len_33556880) {
        return new Array(len_33556880);
  

  
}
function cstrToNimstr(c_33556791) {
      var ln = c_33556791.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556791.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556791.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function addInt(a_33556927, b_33556928) {
        var result = a_33556927 + b_33556928;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
function chckIndx(i_33557174, a_33557175, b_33557176) {
      var Tmp1;

  var result_33557177 = 0;

  BeforeRet: do {
      if (!(a_33557175 <= i_33557174)) Tmp1 = false; else {        Tmp1 = (i_33557174 <= b_33557176);      }    if (Tmp1) {
    result_33557177 = i_33557174;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557174, a_33557175, b_33557176);
    }
    
  } while (false);

  return result_33557177;

}
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);
function subInt(a_33556931, b_33556932) {
        var result = a_33556931 - b_33556932;
    checkOverflowInt(result);
    return result;
  

  
}
function divInt(a_33556939, b_33556940) {
        if (b_33556940 == 0) raiseDivByZero();
    if (b_33556940 == -1 && a_33556939 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556939 / b_33556940);
  

  
}
function mulInt(a_33556935, b_33556936) {
        var result = a_33556935 * b_33556936;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
function chckRange(i_33557179, a_33557180, b_33557181) {
      var Tmp1;

  var result_33557182 = 0;

  BeforeRet: do {
      if (!(a_33557180 <= i_33557179)) Tmp1 = false; else {        Tmp1 = (i_33557179 <= b_33557181);      }    if (Tmp1) {
    result_33557182 = i_33557179;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557182;

}
function nimCharToStr(x_33556500) {
  var result_33556501 = [];

    result_33556501 = nimCopy(null, mnewString(1), NTI33554438);
    result_33556501[0] = x_33556500;

  return result_33556501;

}
function addChar(x_33557245, c_33557246) {
    x_33557245.push(c_33557246);

  
}
function nimFloatToString(a_33556975) {
  var result_33556976 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_33556975))
      result_33556976 = a_33556975 === 0 && 1 / a_33556975 < 0 ? "-0.0" : a_33556975+".0"
    else {
      result_33556976 = a_33556975+""
      if(nimOnlyDigitsOrMinus(result_33556976)){
        result_33556976 = a_33556975+".0"
      }
    }
  

  return result_33556976;

}
var ConstSet9 = setConstr(46, 44);
var ConstSet10 = setConstr([65, 90]);
var ConstSet11 = setConstr([97, 122]);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_637534355 = [0];
function newUplotOptions_520093713() {
  var result_520093714 = null;

    result_520093714 = {m_type: NTI520093705};
    result_520093714["scales"] = {};

  return result_520093714;

}
function newSeq_33556812(len_33556814) {
  var result_33556815 = [];

    result_33556815 = new Array(len_33556814); for (var i=0;i<len_33556814;++i) {result_33556815[i]=null;}
  return result_33556815;

}
function title_520093738(opts_520093739, opts_520093739_Idx, title_520093740) {
    opts_520093739[opts_520093739_Idx]["title"] = toJSStr(title_520093740);

  
}
function width_520093746(opts_520093747, opts_520093747_Idx, width_520093748) {
    opts_520093747[opts_520093747_Idx]["width"] = width_520093748;

  
}
function height_520093754(opts_520093755, opts_520093755_Idx, height_520093756) {
    opts_520093755[opts_520093755_Idx]["height"] = height_520093756;

  
}
function unsetTimeScale_520093787(scale_520093788, scale_520093788_Idx) {
    scale_520093788[scale_520093788_Idx]["time"] = false;

  
}
function addScale_520093778(opts_520093779, opts_520093779_Idx, name_520093780, scale_520093781) {
    opts_520093779[opts_520093779_Idx]["scales"][toJSStr(name_520093780)] = scale_520093781;

  
}
function label_520093914(serie_520093915, serie_520093915_Idx, label_520093916) {
    serie_520093915[serie_520093915_Idx]["label"] = toJSStr(label_520093916);

  
}
function stroke_520093958(serie_520093959, serie_520093959_Idx, stroke_520093960) {
    serie_520093959[serie_520093959_Idx]["stroke"] = toJSStr(stroke_520093960);

  
}
function width_520093966(serie_520093967, serie_520093967_Idx, width_520093968) {
    serie_520093967[serie_520093967_Idx]["width"] = width_520093968;

  
}
function isFatPointer_33557121(ti_33557122) {
  var result_33557123 = false;

  BeforeRet: do {
    result_33557123 = !((ConstSet1[ti_33557122.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557123;

}
function nimCopyAux(dest_33557134, src_33557135, n_33557136) {
    switch (n_33557136.kind) {
    case 0:
      break;
    case 1:
            dest_33557134[n_33557136.offset] = nimCopy(dest_33557134[n_33557136.offset], src_33557135[n_33557136.offset], n_33557136.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557136.sons.length; i++) {
      nimCopyAux(dest_33557134, src_33557135, n_33557136.sons[i]);
    }
    
      break;
    case 3:
            dest_33557134[n_33557136.offset] = nimCopy(dest_33557134[n_33557136.offset], src_33557135[n_33557136.offset], n_33557136.typ);
      for (var i = 0; i < n_33557136.sons.length; ++i) {
        nimCopyAux(dest_33557134, src_33557135, n_33557136.sons[i][1]);
      }
    
      break;
    }

  
}
function add_33556416(x_33556417, x_33556417_Idx, y_33556418) {
          if (x_33556417[x_33556417_Idx] === null) { x_33556417[x_33556417_Idx] = []; }
      var off = x_33556417[x_33556417_Idx].length;
      x_33556417[x_33556417_Idx].length += y_33556418.length;
      for (var i = 0; i < y_33556418.length; ++i) {
        x_33556417[x_33556417_Idx][off+i] = y_33556418.charCodeAt(i);
      }
    

  
}
function unhandledException(e_33556651) {
    var buf_33556652 = [[]];
    if (!(((e_33556651.message).length == 0))) {
    buf_33556652[0].push.apply(buf_33556652[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556652[0].push.apply(buf_33556652[0], e_33556651.message);;
    }
    else {
    buf_33556652[0].push.apply(buf_33556652[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556652[0].push.apply(buf_33556652[0], makeNimstrLit(" ["));;
    add_33556416(buf_33556652, 0, e_33556651.name);
    buf_33556652[0].push.apply(buf_33556652[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556653 = toJSStr(buf_33556652[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556653);
  }
  else {
    throw cbuf_33556653;
  }
  

  
}
function sysFatal_218103843(message_218103846) {
    raiseException({message: nimCopy(null, message_218103846, NTI33554438), m_type: NTI33555113, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_218103841(msg_218103842) {
    sysFatal_218103843(msg_218103842);

  
}
function failedAssertImpl_218103865(msg_218103866) {
    raiseAssert_218103841(msg_218103866);

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555111, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_33556925) {
        if (a_33556925 > 2147483647 || a_33556925 < -2147483648) raiseOverflow();
  

  
}
function raiseIndexError(i_33556742, a_33556743, b_33556744) {
    var Tmp1;

    if ((b_33556744 < a_33556743)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_33556742)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_33556743)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_33556744)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI33554438), parent: null, m_type: NTI33555117, name: null, trace: [], up: null}, "IndexDefect");

  
}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555110, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}
function parseSaturatedNatural_889192764(s_889192765, b_889192766, b_889192766_Idx, start_889192767) {
      var Tmp1;
          var Tmp4;

  var result_889192768 = 0;

    var i_889192769 = start_889192767;
    if (((i_889192769 < (s_889192765).length) && (s_889192765[chckIndx(i_889192769, 0, (s_889192765).length-1)] == 43))) {
    i_889192769 = addInt(i_889192769, 1);
    }
    
      if (!(i_889192769 < (s_889192765).length)) Tmp1 = false; else {        Tmp1 = (ConstSet6[s_889192765[chckIndx(i_889192769, 0, (s_889192765).length-1)]] != undefined);      }    if (Tmp1) {
    b_889192766[b_889192766_Idx] = 0;
    L2: do {
        L3: while (true) {
          if (!(i_889192769 < (s_889192765).length)) Tmp4 = false; else {            Tmp4 = (ConstSet7[s_889192765[chckIndx(i_889192769, 0, (s_889192765).length-1)]] != undefined);          }        if (!Tmp4) break L3;
          var c_889192788 = subInt(s_889192765[chckIndx(i_889192769, 0, (s_889192765).length-1)], 48);
          if ((b_889192766[b_889192766_Idx] <= divInt(subInt(2147483647, c_889192788), 10))) {
          b_889192766[b_889192766_Idx] = addInt(mulInt(b_889192766[b_889192766_Idx], 10), c_889192788);
          }
          else {
            b_889192766[b_889192766_Idx] = 2147483647;
          }
          
          i_889192769 = addInt(i_889192769, 1);
          L5: do {
              L6: while (true) {
              if (!((i_889192769 < (s_889192765).length) && (s_889192765[chckIndx(i_889192769, 0, (s_889192765).length-1)] == 95))) break L6;
                i_889192769 = addInt(i_889192769, 1);
              }
          } while(false);
        }
    } while(false);
    result_889192768 = subInt(i_889192769, start_889192767);
    }
    

  return result_889192768;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555119, name: null, trace: [], up: null}, "RangeDefect");

  
}
function HEX5BHEX5D_905972912(s_905972915, x_905972916) {
  var result_905972917 = [];

    var a_905972919 = x_905972916.a;
    var L_905972921 = addInt(subInt(subInt((s_905972915).length, x_905972916.b), a_905972919), 1);
    result_905972917 = nimCopy(null, mnewString(chckRange(L_905972921, 0, 2147483647)), NTI33554438);
    L1: do {
      var i_905972926 = 0;
      var i_402653341 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_402653341 < L_905972921)) break L3;
            i_905972926 = i_402653341;
            result_905972917[chckIndx(i_905972926, 0, (result_905972917).length-1)] = s_905972915[chckIndx(addInt(i_905972926, a_905972919), 0, (s_905972915).length-1)];
            i_402653341 = addInt(i_402653341, 1);
          }
      } while(false);
    } while(false);

  return result_905972917;

}
function HEX2EHEX2E_905972885(a_905972888, b_905972889) {
  var result_905972892 = ({a: 0, b: 0});

    result_905972892 = nimCopy(result_905972892, {a: a_905972888, b: b_905972889}, NTI905980075);

  return result_905972892;

}
function parseStandardFormatSpecifier_570425398(s_570425399, start_570425400, ignoreUnknownSuffix_570425401) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_570425402 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_570425402.fill = 32;
    result_570425402.align = 0;
    result_570425402.sign = 45;
    var i_570425404 = start_570425400;
    if (((addInt(i_570425404, 1) < (s_570425399).length) && (ConstSet2[s_570425399[chckIndx(addInt(i_570425404, 1), 0, (s_570425399).length-1)]] != undefined))) {
    result_570425402.fill = s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)];
    result_570425402.align = s_570425399[chckIndx(addInt(i_570425404, 1), 0, (s_570425399).length-1)];
    i_570425404 = addInt(i_570425404, 2);
    }
    else {
    if (((i_570425404 < (s_570425399).length) && (ConstSet3[s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)]] != undefined))) {
    result_570425402.align = s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)];
    i_570425404 = addInt(i_570425404, 1);
    }
    }
    if (((i_570425404 < (s_570425399).length) && (ConstSet4[s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)]] != undefined))) {
    result_570425402.sign = s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)];
    i_570425404 = addInt(i_570425404, 1);
    }
    
    if (((i_570425404 < (s_570425399).length) && (s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)] == 35))) {
    result_570425402.alternateForm = true;
    i_570425404 = addInt(i_570425404, 1);
    }
    
      if (!((addInt(i_570425404, 1) < (s_570425399).length) && (s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet5[s_570425399[chckIndx(addInt(i_570425404, 1), 0, (s_570425399).length-1)]] != undefined);      }    if (Tmp1) {
    result_570425402.padWithZero = true;
    i_570425404 = addInt(i_570425404, 1);
    }
    
    var parsedLength_570425441 = parseSaturatedNatural_889192764(s_570425399, result_570425402, "minimumWidth", i_570425404);
    i_570425404 = addInt(i_570425404, parsedLength_570425441);
    if (((i_570425404 < (s_570425399).length) && (s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)] == 46))) {
    i_570425404 = addInt(i_570425404, 1);
    var parsedLengthB_570425450 = parseSaturatedNatural_889192764(s_570425399, result_570425402, "precision", i_570425404);
    i_570425404 = addInt(i_570425404, parsedLengthB_570425450);
    }
    else {
      result_570425402.precision = -1;
    }
    
      if (!(i_570425404 < (s_570425399).length)) Tmp2 = false; else {        Tmp2 = (ConstSet8[s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)]] != undefined);      }    if (Tmp2) {
    result_570425402.typ = s_570425399[chckIndx(i_570425404, 0, (s_570425399).length-1)];
    i_570425404 = addInt(i_570425404, 1);
    }
    
    result_570425402.endPosition = i_570425404;
      if (!!((i_570425404 == (s_570425399).length))) Tmp3 = false; else {        Tmp3 = !(ignoreUnknownSuffix_570425401);      }    if (Tmp3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_905972912(s_570425399, HEX2EHEX2E_905972885(i_570425404, 1)) || []), parent: null, m_type: NTI33555114, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_570425402;

}
function mkDigit_570425345(v_570425346, typ_570425347) {
      var Tmp1;

  var result_570425348 = [];

    if (!((v_570425346 < 26))) {
    failedAssertImpl_218103865(makeNimstrLit("strformat.nim(292, 9) `v < 26` "));
    }
    
    if ((v_570425346 < 10)) {
    result_570425348 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_570425346), 0, 255)), NTI33554438);
    }
    else {
      if ((typ_570425347 == 120)) {
      Tmp1 = 97;
      }
      else {
      Tmp1 = 65;
      }
      
      result_570425348 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Tmp1, v_570425346), 10), 0, 255)), NTI33554438);
    }
    

  return result_570425348;

}
function nsuRepeatChar(c_939525108, count_939525109) {
  var result_939525110 = [];

    result_939525110 = nimCopy(null, mnewString(count_939525109), NTI33554438);
    L1: do {
      var i_939525115 = 0;
      var colontmp__402653353 = 0;
      colontmp__402653353 = subInt(count_939525109, 1);
      var res_402653354 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_402653354 <= colontmp__402653353)) break L3;
            i_939525115 = res_402653354;
            result_939525110[chckIndx(i_939525115, 0, (result_939525110).length-1)] = c_939525108;
            res_402653354 = addInt(res_402653354, 1);
          }
      } while(false);
    } while(false);

  return result_939525110;

}
function formatInt_1073741859(n_1073741861, radix_1073741862, spec_1073741863) {
    var Tmp1;
    var Tmp8;

  var result_1073741864 = [];

    var n_1073741867 = n_1073741861;
    var negative_1073741868 = (n_1073741867 < 0);
    if (negative_1073741868) {
    Tmp1 = ((~(n_1073741867) + 1) );
    }
    else {
    Tmp1 = n_1073741867;
    }
    
    var v_1073741869 = Tmp1;
    var xx_1073741870 = [];
    if (spec_1073741863.alternateForm) {
    switch (spec_1073741863.typ) {
    case 88:
      xx_1073741870 = nimCopy(null, makeNimstrLit("0x"), NTI33554438);
      break;
    case 120:
      xx_1073741870 = nimCopy(null, makeNimstrLit("0x"), NTI33554438);
      break;
    case 98:
      xx_1073741870 = nimCopy(null, makeNimstrLit("0b"), NTI33554438);
      break;
    case 111:
      xx_1073741870 = nimCopy(null, makeNimstrLit("0o"), NTI33554438);
      break;
    default: 
      break;
    }
    }
    
    if ((v_1073741869 == 0)) {
    result_1073741864 = nimCopy(null, makeNimstrLit("0"), NTI33554438);
    }
    else {
      result_1073741864 = nimCopy(null, [], NTI33554438);
      L2: do {
          L3: while (true) {
          if (!(0 < v_1073741869)) break L3;
            var d_1073741871 = (v_1073741869 % radix_1073741862);
            v_1073741869 = Math.trunc(((v_1073741869 / radix_1073741862) ));
            result_1073741864.push.apply(result_1073741864, mkDigit_570425345(chckRange(d_1073741871, -2147483648, 2147483647), spec_1073741863.typ));;
          }
      } while(false);
      L4: do {
        var idx_1073741876 = 0;
        var colontmp__402653345 = 0;
        colontmp__402653345 = divInt((result_1073741864).length, 2);
        var i_402653346 = 0;
        L5: do {
            L6: while (true) {
            if (!(i_402653346 < colontmp__402653345)) break L6;
              idx_1073741876 = i_402653346;
              var Tmp7 = result_1073741864[chckIndx(idx_1073741876, 0, (result_1073741864).length-1)]; result_1073741864[chckIndx(idx_1073741876, 0, (result_1073741864).length-1)] = result_1073741864[chckIndx(subInt(subInt((result_1073741864).length, idx_1073741876), 1), 0, (result_1073741864).length-1)]; result_1073741864[chckIndx(subInt(subInt((result_1073741864).length, idx_1073741876), 1), 0, (result_1073741864).length-1)] = Tmp7;              i_402653346 = addInt(i_402653346, 1);
            }
        } while(false);
      } while(false);
    }
    
    if (spec_1073741863.padWithZero) {
    if (negative_1073741868) Tmp8 = true; else {      Tmp8 = !((spec_1073741863.sign == 45));    }    var sign_1073741881 = Tmp8;
    var toFill_1073741885 = subInt(subInt(subInt(spec_1073741863.minimumWidth, (result_1073741864).length), (xx_1073741870).length), (sign_1073741881 ? 1:0));
    if ((0 < toFill_1073741885)) {
    result_1073741864 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1073741885, 0, 2147483647)) || []).concat(result_1073741864 || []), NTI33554438);
    }
    
    }
    
    if (negative_1073741868) {
    result_1073741864 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_1073741870 || [],result_1073741864 || []), NTI33554438);
    }
    else {
    if (!((spec_1073741863.sign == 45))) {
    result_1073741864 = nimCopy(null, [spec_1073741863.sign].concat(xx_1073741870 || [],result_1073741864 || []), NTI33554438);
    }
    else {
      result_1073741864 = nimCopy(null, (xx_1073741870 || []).concat(result_1073741864 || []), NTI33554438);
    }
    }
    if ((spec_1073741863.align == 60)) {
    L9: do {
      var i_1073741890 = 0;
      var colontmp__402653349 = 0;
      colontmp__402653349 = (result_1073741864).length;
      var i_402653350 = colontmp__402653349;
      L10: do {
          L11: while (true) {
          if (!(i_402653350 < spec_1073741863.minimumWidth)) break L11;
            i_1073741890 = i_402653350;
            addChar(result_1073741864, spec_1073741863.fill);;
            i_402653350 = addInt(i_402653350, 1);
          }
      } while(false);
    } while(false);
    }
    else {
      var toFill_1073741891 = subInt(spec_1073741863.minimumWidth, (result_1073741864).length);
      if ((spec_1073741863.align == 94)) {
      var half_1073741892 = divInt(toFill_1073741891, 2);
      result_1073741864 = nimCopy(null, (nsuRepeatChar(spec_1073741863.fill, chckRange(half_1073741892, 0, 2147483647)) || []).concat(result_1073741864 || [],nsuRepeatChar(spec_1073741863.fill, chckRange(subInt(toFill_1073741891, half_1073741892), 0, 2147483647)) || []), NTI33554438);
      }
      else {
        if ((0 < toFill_1073741891)) {
        result_1073741864 = nimCopy(null, (nsuRepeatChar(spec_1073741863.fill, chckRange(toFill_1073741891, 0, 2147483647)) || []).concat(result_1073741864 || []), NTI33554438);
        }
        
      }
      
    }
    

  return result_1073741864;

}
function formatValue_1073741851(result_1073741853, result_1073741853_Idx, value_1073741854, specifier_1073741855) {
  BeforeRet: do {
    if (((specifier_1073741855).length == 0)) {
    result_1073741853[result_1073741853_Idx].push.apply(result_1073741853[result_1073741853_Idx], cstrToNimstr((value_1073741854)+""));;
    break BeforeRet;
    }
    
    var spec_1073741856 = parseStandardFormatSpecifier_570425398(specifier_1073741855, 0, false);
    var radix_1073741857 = 10;
    switch (spec_1073741856.typ) {
    case 120:
    case 88:
      radix_1073741857 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_1073741857 = 2;
      break;
    case 111:
      radix_1073741857 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_1073741856.typ]), parent: null, m_type: NTI33555114, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1073741853[result_1073741853_Idx].push.apply(result_1073741853[result_1073741853_Idx], formatInt_1073741859(value_1073741854, radix_1073741857, spec_1073741856));;
  } while (false);

  
}
function nsuformatBiggestFloat(f_939525912, format_939525913, precision_939525914, decimalSep_939525915) {
  var result_939525916 = [];

    var precision_939525917 = precision_939525914;
    if ((precision_939525917 == -1)) {
    precision_939525917 = 6;
    }
    
    var res_939525918 = null;
    switch (format_939525913) {
    case 0:
      res_939525918 = f_939525912.toString();
      break;
    case 1:
      res_939525918 = f_939525912.toFixed(precision_939525917);
      break;
    case 2:
      res_939525918 = f_939525912.toExponential(precision_939525917);
      break;
    }
    result_939525916 = nimCopy(null, cstrToNimstr(res_939525918), NTI33554438);
    if (((1.0000000000000000e+00 / f_939525912) == -Infinity)) {
    result_939525916 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_939525918) || []), NTI33554438);
    }
    
    L1: do {
      var i_939525923 = 0;
      var colontmp__402653357 = 0;
      colontmp__402653357 = (result_939525916).length;
      var i_402653358 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_402653358 < colontmp__402653357)) break L3;
            i_939525923 = i_402653358;
            if ((ConstSet9[result_939525916[chckIndx(i_939525923, 0, (result_939525916).length-1)]] != undefined)) {
            result_939525916[chckIndx(i_939525923, 0, (result_939525916).length-1)] = decimalSep_939525915;
            }
            
            i_402653358 = addInt(i_402653358, 1);
          }
      } while(false);
    } while(false);

  return result_939525916;

}
function insert_33557853(x_33557854, x_33557854_Idx, item_33557855, i_33557856) {
    var xl_33557857 = (x_33557854[x_33557854_Idx]).length;
    (x_33557854[x_33557854_Idx].length = chckRange(addInt(xl_33557857, (item_33557855).length), 0, 2147483647));
    var j_33557858 = subInt(xl_33557857, 1);
    L1: do {
        L2: while (true) {
        if (!(i_33557856 <= j_33557858)) break L2;
          x_33557854[x_33557854_Idx][chckIndx(addInt(j_33557858, (item_33557855).length), 0, (x_33557854[x_33557854_Idx]).length-1)] = x_33557854[x_33557854_Idx][chckIndx(j_33557858, 0, (x_33557854[x_33557854_Idx]).length-1)];
          j_33557858 = subInt(j_33557858, 1);
        }
    } while(false);
    j_33557858 = 0;
    L3: do {
        L4: while (true) {
        if (!(j_33557858 < (item_33557855).length)) break L4;
          x_33557854[x_33557854_Idx][chckIndx(addInt(j_33557858, i_33557856), 0, (x_33557854[x_33557854_Idx]).length-1)] = item_33557855[chckIndx(j_33557858, 0, (item_33557855).length-1)];
          j_33557858 = addInt(j_33557858, 1);
        }
    } while(false);

  
}
function validateUtf8_905969941(s_905969942) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_905969943 = 0;

  BeforeRet: do {
    var i_905969944 = 0;
    var L_905969945 = (s_905969942).length;
    L1: do {
        L2: while (true) {
        if (!(i_905969944 < L_905969945)) break L2;
          if ((s_905969942[chckIndx(i_905969944, 0, (s_905969942).length-1)] <= 127)) {
          i_905969944 = addInt(i_905969944, 1);
          }
          else {
          if ((((s_905969942[chckIndx(i_905969944, 0, (s_905969942).length-1)] >>> 0) >>> 5) == 6)) {
          if ((s_905969942[chckIndx(i_905969944, 0, (s_905969942).length-1)] < 194)) {
          result_905969943 = i_905969944;
          break BeforeRet;
          }
          
            if (!(addInt(i_905969944, 1) < L_905969945)) Tmp3 = false; else {              Tmp3 = (((s_905969942[chckIndx(addInt(i_905969944, 1), 0, (s_905969942).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          i_905969944 = addInt(i_905969944, 2);
          }
          else {
            result_905969943 = i_905969944;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_905969942[chckIndx(i_905969944, 0, (s_905969942).length-1)] >>> 0) >>> 4) == 14)) {
            if (!(addInt(i_905969944, 2) < L_905969945)) Tmp5 = false; else {              Tmp5 = (((s_905969942[chckIndx(addInt(i_905969944, 1), 0, (s_905969942).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_905969942[chckIndx(addInt(i_905969944, 2), 0, (s_905969942).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          i_905969944 = addInt(i_905969944, 3);
          }
          else {
            result_905969943 = i_905969944;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_905969942[chckIndx(i_905969944, 0, (s_905969942).length-1)] >>> 0) >>> 3) == 30)) {
            if (!(addInt(i_905969944, 3) < L_905969945)) Tmp8 = false; else {              Tmp8 = (((s_905969942[chckIndx(addInt(i_905969944, 1), 0, (s_905969942).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_905969942[chckIndx(addInt(i_905969944, 2), 0, (s_905969942).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_905969942[chckIndx(addInt(i_905969944, 3), 0, (s_905969942).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          i_905969944 = addInt(i_905969944, 4);
          }
          else {
            result_905969943 = i_905969944;
            break BeforeRet;
          }
          
          }
          else {
            result_905969943 = i_905969944;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    result_905969943 = -1;
    break BeforeRet;
  } while (false);

  return result_905969943;

}
function nucruneLen(s_905969674) {
  var result_905969675 = 0;

    result_905969675 = 0;
    var i_905969676 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_905969676 < (s_905969674).length)) break L2;
          if ((s_905969674[chckIndx(i_905969676, 0, (s_905969674).length-1)] <= 127)) {
          i_905969676 = addInt(i_905969676, 1);
          }
          else {
          if ((((s_905969674[chckIndx(i_905969676, 0, (s_905969674).length-1)] >>> 0) >>> 5) == 6)) {
          i_905969676 = addInt(i_905969676, 2);
          }
          else {
          if ((((s_905969674[chckIndx(i_905969676, 0, (s_905969674).length-1)] >>> 0) >>> 4) == 14)) {
          i_905969676 = addInt(i_905969676, 3);
          }
          else {
          if ((((s_905969674[chckIndx(i_905969676, 0, (s_905969674).length-1)] >>> 0) >>> 3) == 30)) {
          i_905969676 = addInt(i_905969676, 4);
          }
          else {
          if ((((s_905969674[chckIndx(i_905969676, 0, (s_905969674).length-1)] >>> 0) >>> 2) == 62)) {
          i_905969676 = addInt(i_905969676, 5);
          }
          else {
          if ((((s_905969674[chckIndx(i_905969676, 0, (s_905969674).length-1)] >>> 0) >>> 1) == 126)) {
          i_905969676 = addInt(i_905969676, 6);
          }
          else {
          i_905969676 = addInt(i_905969676, 1);
          }
          }}}}}
          result_905969675 = addInt(result_905969675, 1);
        }
    } while(false);

  return result_905969675;

}
function alignString_570425360(s_570425361, minimumWidth_570425362, align_570425363, fill_570425364) {
      var Tmp1;

  var result_570425365 = [];

    if ((minimumWidth_570425362 == 0)) {
    result_570425365 = nimCopy(null, s_570425361, NTI33554438);
    }
    else {
      if ((validateUtf8_905969941(s_570425361) == -1)) {
      Tmp1 = nucruneLen(s_570425361);
      }
      else {
      Tmp1 = (s_570425361).length;
      }
      
      var sRuneLen_570425366 = Tmp1;
      var toFill_570425367 = subInt(minimumWidth_570425362, sRuneLen_570425366);
      if ((toFill_570425367 <= 0)) {
      result_570425365 = nimCopy(null, s_570425361, NTI33554438);
      }
      else {
      if (((align_570425363 == 60) || (align_570425363 == 0))) {
      result_570425365 = nimCopy(null, (s_570425361 || []).concat(nsuRepeatChar(fill_570425364, chckRange(toFill_570425367, 0, 2147483647)) || []), NTI33554438);
      }
      else {
      if ((align_570425363 == 94)) {
      var half_570425368 = divInt(toFill_570425367, 2);
      result_570425365 = nimCopy(null, (nsuRepeatChar(fill_570425364, chckRange(half_570425368, 0, 2147483647)) || []).concat(s_570425361 || [],nsuRepeatChar(fill_570425364, chckRange(subInt(toFill_570425367, half_570425368), 0, 2147483647)) || []), NTI33554438);
      }
      else {
        result_570425365 = nimCopy(null, (nsuRepeatChar(fill_570425364, chckRange(toFill_570425367, 0, 2147483647)) || []).concat(s_570425361 || []), NTI33554438);
      }
      }}
    }
    

  return result_570425365;

}
function nsuToUpperAsciiChar(c_939524176) {
  var result_939524177 = 0;

    if ((ConstSet11[c_939524176] != undefined)) {
    result_939524177 = (c_939524176 ^ 32);
    }
    else {
      result_939524177 = c_939524176;
    }
    

  return result_939524177;

}
function nsuToUpperAsciiStr(s_939524183) {
  var result_939524184 = [];

    result_939524184 = nimCopy(null, mnewString(chckRange((s_939524183).length, 0, 2147483647)), NTI33554438);
    L1: do {
      var iHEX60gensym11_939524190 = 0;
      var colontmp__402653365 = 0;
      colontmp__402653365 = subInt((s_939524183).length, 1);
      var res_402653366 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_402653366 <= colontmp__402653365)) break L3;
            iHEX60gensym11_939524190 = res_402653366;
            result_939524184[chckIndx(iHEX60gensym11_939524190, 0, (result_939524184).length-1)] = nsuToUpperAsciiChar(s_939524183[chckIndx(iHEX60gensym11_939524190, 0, (s_939524183).length-1)]);
            res_402653366 = addInt(res_402653366, 1);
          }
      } while(false);
    } while(false);

  return result_939524184;

}
function formatValue_1073741903(result_1073741905, result_1073741905_Idx, value_1073741906, specifier_1073741907) {
    var Tmp1;

  BeforeRet: do {
    if (((specifier_1073741907).length == 0)) {
    result_1073741905[result_1073741905_Idx].push.apply(result_1073741905[result_1073741905_Idx], cstrToNimstr(nimFloatToString(value_1073741906)));;
    break BeforeRet;
    }
    
    var spec_1073741908 = parseStandardFormatSpecifier_570425398(specifier_1073741907, 0, false);
    var fmode_1073741909 = 0;
    switch (spec_1073741908.typ) {
    case 101:
    case 69:
      fmode_1073741909 = 2;
      break;
    case 102:
    case 70:
      fmode_1073741909 = 1;
      break;
    case 103:
    case 71:
      fmode_1073741909 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_1073741908.typ]), parent: null, m_type: NTI33555114, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_1073741911 = [nsuformatBiggestFloat(value_1073741906, fmode_1073741909, chckRange(spec_1073741908.precision, -1, 32), 46)];
    var sign_1073741912 = false;
    if ((0.0 <= value_1073741906)) {
    if (!((spec_1073741908.sign == 45))) {
    sign_1073741912 = true;
    if ((value_1073741906 == 0.0)) {
    if (((1.0000000000000000e+00 / value_1073741906) == Infinity)) {
    insert_33557853(f_1073741911, 0, nimCharToStr(spec_1073741908.sign), 0);
    }
    
    }
    else {
    insert_33557853(f_1073741911, 0, nimCharToStr(spec_1073741908.sign), 0);
    }
    
    }
    
    }
    else {
      sign_1073741912 = true;
    }
    
    if (spec_1073741908.padWithZero) {
    var signStr_1073741913 = [];
    if (sign_1073741912) {
    signStr_1073741913 = nimCopy(null, nimCharToStr(f_1073741911[0][chckIndx(0, 0, (f_1073741911[0]).length-1)]), NTI33554438);
    f_1073741911[0] = nimCopy(null, HEX5BHEX5D_905972912(f_1073741911[0], HEX2EHEX2E_905972885(1, 1)), NTI33554438);
    }
    
    var toFill_1073741935 = subInt(subInt(spec_1073741908.minimumWidth, (f_1073741911[0]).length), (sign_1073741912 ? 1:0));
    if ((0 < toFill_1073741935)) {
    f_1073741911[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1073741935, 0, 2147483647)) || []).concat(f_1073741911[0] || []), NTI33554438);
    }
    
    if (sign_1073741912) {
    f_1073741911[0] = nimCopy(null, (signStr_1073741913 || []).concat(f_1073741911[0] || []), NTI33554438);
    }
    
    }
    
    if ((spec_1073741908.align == 0)) {
    Tmp1 = 62;
    }
    else {
    Tmp1 = spec_1073741908.align;
    }
    
    var align_1073741936 = Tmp1;
    var res_1073741937 = alignString_570425360(f_1073741911[0], spec_1073741908.minimumWidth, align_1073741936, spec_1073741908.fill);
    if ((ConstSet10[spec_1073741908.typ] != undefined)) {
    result_1073741905[result_1073741905_Idx].push.apply(result_1073741905[result_1073741905_Idx], nsuToUpperAsciiStr(res_1073741937));;
    }
    else {
    result_1073741905[result_1073741905_Idx].push.apply(result_1073741905[result_1073741905_Idx], res_1073741937);;
    }
    
  } while (false);

  
}
function fill_520093974(serie_520093975, serie_520093975_Idx, r_520093976, g_520093977, b_520093978, alpha_520093979) {
    if (!((0.0 <= alpha_520093979))) {
    failedAssertImpl_218103865(makeNimstrLit("uplot.nim(89, 10) `alpha >= 0.0` "));
    }
    
    if (!((alpha_520093979 <= 1.0000000000000000e+00))) {
    failedAssertImpl_218103865(makeNimstrLit("uplot.nim(90, 10) `alpha <= 1.0` "));
    }
    
    var fmtRes_520093990 = [mnewString(0)];
    fmtRes_520093990[0].push.apply(fmtRes_520093990[0], makeNimstrLit("rgba("));;
    formatValue_1073741851(fmtRes_520093990, 0, r_520093976, []);
    fmtRes_520093990[0].push.apply(fmtRes_520093990[0], makeNimstrLit(", "));;
    formatValue_1073741851(fmtRes_520093990, 0, g_520093977, []);
    fmtRes_520093990[0].push.apply(fmtRes_520093990[0], makeNimstrLit(", "));;
    formatValue_1073741851(fmtRes_520093990, 0, b_520093978, []);
    fmtRes_520093990[0].push.apply(fmtRes_520093990[0], makeNimstrLit(", "));;
    formatValue_1073741903(fmtRes_520093990, 0, alpha_520093979, []);
    fmtRes_520093990[0].push.apply(fmtRes_520093990[0], makeNimstrLit(")"));;
    var tmp_520094011 = nimCopy(null, fmtRes_520093990[0], NTI33554438);
    serie_520093975[serie_520093975_Idx]["fill"] = toJSStr(tmp_520094011);

  
}
function hide_520093929(serie_520093930, serie_520093930_Idx) {
    serie_520093930[serie_520093930_Idx]["show"] = false;

  
}
function dash_520094017(serie_520094018, serie_520094018_Idx, max_520094019, min_520094020) {
    serie_520094018[serie_520094018_Idx]["dash"] = new Uint32Array([max_520094019, min_520094020]);

  
}
function value_520094037(serie_520094038, serie_520094038_Idx, lbd_520094042) {
    serie_520094038[serie_520094038_Idx]["value"] = lbd_520094042;

  
}
function formatValue_402653195(result_402653197, result_402653197_Idx, value_402653198, specifier_402653199) {
  BeforeRet: do {
    if (((specifier_402653199).length == 0)) {
    result_402653197[result_402653197_Idx].push.apply(result_402653197[result_402653197_Idx], cstrToNimstr((value_402653198)+""));;
    break BeforeRet;
    }
    
    var spec_402653200 = parseStandardFormatSpecifier_570425398(specifier_402653199, 0, false);
    var radix_402653201 = 10;
    switch (spec_402653200.typ) {
    case 120:
    case 88:
      radix_402653201 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_402653201 = 2;
      break;
    case 111:
      radix_402653201 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_402653200.typ]), parent: null, m_type: NTI33555114, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_402653197[result_402653197_Idx].push.apply(result_402653197[result_402653197_Idx], formatInt_1073741859(value_402653198, radix_402653201, spec_402653200));;
  } while (false);

  
}
function setSeries_520093836(opts_520093837, opts_520093837_Idx, series_520093838) {
    var tmp_520093843 = [{m_type: NTI520093707}];
    L1: do {
      var i_520093856 = null;
      var i_520093856_Idx = 0;
      var i_402653370 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_402653370 < (series_520093838).length)) break L3;
            i_520093856 = series_520093838; i_520093856_Idx = chckIndx(i_402653370, 0, (series_520093838).length-1);
            tmp_520093843.push(i_520093856[i_520093856_Idx]);;
            i_402653370 = addInt(i_402653370, 1);
          }
      } while(false);
    } while(false);
    opts_520093837[opts_520093837_Idx]["series"] = (tmp_520093843);

  
}
function label_520094116(axe_520094117, axe_520094117_Idx, label_520094118) {
    axe_520094117[axe_520094117_Idx]["label"] = toJSStr(label_520094118);

  
}
function top_520094140(axe_520094141, axe_520094141_Idx) {
    axe_520094141[axe_520094141_Idx]["side"] = 0;

  
}
function stroke_520094124(axe_520094125, axe_520094125_Idx, stroke_520094126) {
    axe_520094125[axe_520094125_Idx]["stroke"] = toJSStr(stroke_520094126);

  
}
function rgba_1073741831(g_1073741832, g_1073741832_Idx, red_1073741833, green_1073741834, blue_1073741835, alpha_1073741836) {
      var Tmp1;

      if (!(0.0 <= alpha_1073741836)) Tmp1 = false; else {        Tmp1 = (alpha_1073741836 <= 1.0000000000000000e+00);      }    if (!(Tmp1)) {
    failedAssertImpl_218103865(makeNimstrLit("grid.nim(14, 10) `alpha >= 0.0 and alpha <= 1.0` alpha shall be between [0.0, 1.0]"));
    }
    
    var fmtRes_1073741845 = [mnewString(0)];
    fmtRes_1073741845[0].push.apply(fmtRes_1073741845[0], makeNimstrLit("rgba("));;
    formatValue_1073741851(fmtRes_1073741845, 0, red_1073741833, []);
    fmtRes_1073741845[0].push.apply(fmtRes_1073741845[0], makeNimstrLit(","));;
    formatValue_1073741851(fmtRes_1073741845, 0, green_1073741834, []);
    fmtRes_1073741845[0].push.apply(fmtRes_1073741845[0], makeNimstrLit(","));;
    formatValue_1073741851(fmtRes_1073741845, 0, blue_1073741835, []);
    fmtRes_1073741845[0].push.apply(fmtRes_1073741845[0], makeNimstrLit(","));;
    formatValue_1073741903(fmtRes_1073741845, 0, alpha_1073741836, []);
    fmtRes_1073741845[0].push.apply(fmtRes_1073741845[0], makeNimstrLit(")"));;
    g_1073741832[g_1073741832_Idx].stroke = toJSStr(fmtRes_1073741845[0]);

  
}
function setGrid_520094222(axe_520094223, axe_520094223_Idx, grid_520094224) {
    axe_520094223[axe_520094223_Idx]["grid"] = grid_520094224;

  
}
function newSeq_520094055(len_520094057) {
  var result_520094058 = [];

    result_520094058 = new Array(len_520094057); for (var i=0;i<len_520094057;++i) {result_520094058[i]=null;}
  return result_520094058;

}
function setAxes_520094048(opts_520094049, opts_520094049_Idx, axes_520094050) {
    var tmp_520094081 = newSeq_520094055(0);
    L1: do {
      var i_520094094 = null;
      var i_520094094_Idx = 0;
      var i_402653374 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_402653374 < (axes_520094050).length)) break L3;
            i_520094094 = axes_520094050; i_520094094_Idx = chckIndx(i_402653374, 0, (axes_520094050).length-1);
            tmp_520094081.push(i_520094094[i_520094094_Idx]);;
            i_402653374 = addInt(i_402653374, 1);
          }
      } while(false);
    } while(false);
    opts_520094049[opts_520094049_Idx]["axes"] = (tmp_520094081);

  
}
function makeChart_402653185() {
    function HEX3Aanonymous_402653190(self_402653191, rawValue_402653192) {
      var result_402653193 = null;

        var fmtRes_402653194 = [mnewString(0)];
        formatValue_402653195(fmtRes_402653194, 0, rawValue_402653192, makeNimstrLit("04"));
        fmtRes_402653194[0].push.apply(fmtRes_402653194[0], makeNimstrLit("days"));;
        result_402653193 = toJSStr(fmtRes_402653194[0]);

      return result_402653193;

    }

    var opts_402653186 = [newUplotOptions_520093713()];
    title_520093738(opts_402653186, 0, makeNimstrLit("Tooltips"));
    width_520093746(opts_402653186, 0, 600);
    height_520093754(opts_402653186, 0, 400);
    var scale_402653187 = [{m_type: NTI520093706}];
    unsetTimeScale_520093787(scale_402653187, 0);
    addScale_520093778(opts_402653186, 0, makeNimstrLit("x"), scale_402653187[0]);
    var serie1_402653188 = [{m_type: NTI520093707}];
    label_520093914(serie1_402653188, 0, makeNimstrLit("One"));
    stroke_520093958(serie1_402653188, 0, makeNimstrLit("red"));
    width_520093966(serie1_402653188, 0, 3);
    var serie2_402653189 = [{m_type: NTI520093707}];
    label_520093914(serie2_402653189, 0, makeNimstrLit("Two"));
    stroke_520093958(serie2_402653189, 0, makeNimstrLit("blue"));
    fill_520093974(serie2_402653189, 0, 0, 255, 0, 2.9999999999999999e-01);
    hide_520093929(serie2_402653189, 0);
    dash_520094017(serie2_402653189, 0, 10, 5);
    value_520094037(serie2_402653189, 0, HEX3Aanonymous_402653190);
    setSeries_520093836(opts_402653186, 0, [serie1_402653188[0], serie2_402653189[0]]);
    var axe1_402653208 = [{m_type: NTI520093708}];
    label_520094116(axe1_402653208, 0, makeNimstrLit("Day"));
    top_520094140(axe1_402653208, 0);
    stroke_520094124(axe1_402653208, 0, makeNimstrLit("red"));
    var g_402653213 = [{show: true, width: 2, dash: [10, 5], m_type: NTI1073741827, stroke: null}];
    rgba_1073741831(g_402653213, 0, 0, 255, 0, 2.0000000000000001e-01);
    setGrid_520094222(axe1_402653208, 0, g_402653213[0]);
    setAxes_520094048(opts_402653186, 0, [axe1_402653208[0]]);
    var data_402653217 = ([new Int32Array([1, 2, 3, 4, 5, 6, 7]), new Int32Array([40, 43, 60, 65, 71, 73, 80]), new Int32Array([18, 24, 37, 55, 55, 60, 63])]);
    var plt_402653218 = new uPlot(opts_402653186[0], data_402653217, document.body);

  
}
makeChart_402653185();
